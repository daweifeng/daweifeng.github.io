{"version":3,"sources":["components/Selector.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Selector","react_default","a","createElement","className","Link","to","href","Home","particles_default","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","Route","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kTAGeA,EAAA,WACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,gCAAR,aAGJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,6EAAR,cCbKC,EAAA,WAyDb,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAWQ,OA1DQ,CACrBC,UAAW,CACTC,OAAQ,CAAEC,MAAO,GAAIC,QAAS,CAAEC,QAAQ,EAAMC,WAAY,MAC1DC,MAAO,CAAEJ,MAAO,WAChBK,MAAO,CACLC,KAAM,SACNC,OAAQ,CAAEC,MAAO,EAAGJ,MAAO,WAC3BK,QAAS,CAAEC,SAAU,GACrBC,MAAO,CAAEC,IAAK,iBAAkBJ,MAAO,IAAKK,OAAQ,MAEtDC,QAAS,CACPd,MAAO,kBACPe,QAAQ,EACRC,KAAM,CAAEd,QAAQ,EAAOe,MAAO,EAAGC,YAAa,GAAKC,MAAM,IAE3DC,KAAM,CACJpB,MAAO,EACPe,QAAQ,EACRC,KAAM,CAAEd,QAAQ,EAAOe,MAAO,GAAII,SAAU,GAAKF,MAAM,IAEzDG,YAAa,CACXpB,QAAQ,EACRqB,SAAU,IACVnB,MAAO,UACPU,QAAS,GACTN,MAAO,GAETgB,KAAM,CACJtB,QAAQ,EACRe,MAAO,EACPQ,UAAW,OACXV,QAAQ,EACRW,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CAAE3B,QAAQ,EAAO4B,QAAS,IAAKC,QAAS,QAGrDC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CAAEjC,QAAQ,EAAOkC,KAAM,WAChCC,QAAS,CAAEnC,QAAQ,EAAMkC,KAAM,QAC/BE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CAAEjB,SAAU,IAAKD,YAAa,CAAER,QAAS,IAC/C2B,OAAQ,CAAElB,SAAU,IAAKH,KAAM,GAAIsB,SAAU,EAAG5B,QAAS,EAAGG,MAAO,GACnE0B,QAAS,CAAEpB,SAAU,IAAKmB,SAAU,IACpCE,KAAM,CAAEC,aAAc,GACtBC,OAAQ,CAAED,aAAc,KAG5BE,eAAe,GAKsBxD,UAAU,gBAC7CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACH,EAAD,UCtDK6D,mLARX,OACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzD,YAJvB0D,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACwE,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6d23c587.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n  return (\n    <div>\n      <div className=\"red-bg selector\">\n        <div className=\"text\">\n          <Link to=\"/project\">Project</Link>\n        </div>\n      </div>\n      <div className=\"blue-bg selector\">\n        <div className=\"text\">\n          <a href=\"https://github.com/daweifeng\">Github </a>\n        </div>\n      </div>\n      <div className=\"orange-bg selector\">\n        <div className=\"text\">\n          <a href=\"https://s3-us-west-2.amazonaws.com/daweifeng/public/Dawei_Feng_Resume.pdf\">\n            Resume\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nimport Selector from \"./Selector\";\n\nexport default () => {\n  const particlesParam = {\n    particles: {\n      number: { value: 20, density: { enable: true, value_area: 800 } },\n      color: { value: \"#787878\" },\n      shape: {\n        type: \"circle\",\n        stroke: { width: 0, color: \"#000000\" },\n        polygon: { nb_sides: 5 },\n        image: { src: \"img/github.svg\", width: 100, height: 100 }\n      },\n      opacity: {\n        value: 0.8759538822118227,\n        random: false,\n        anim: { enable: false, speed: 1, opacity_min: 0.1, sync: false }\n      },\n      size: {\n        value: 3,\n        random: true,\n        anim: { enable: false, speed: 40, size_min: 0.1, sync: false }\n      },\n      line_linked: {\n        enable: false,\n        distance: 150,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: \"none\",\n        random: false,\n        straight: false,\n        out_mode: \"out\",\n        bounce: false,\n        attract: { enable: false, rotateX: 600, rotateY: 1200 }\n      }\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: { enable: false, mode: \"repulse\" },\n        onclick: { enable: true, mode: \"push\" },\n        resize: true\n      },\n      modes: {\n        grab: { distance: 400, line_linked: { opacity: 1 } },\n        bubble: { distance: 400, size: 40, duration: 2, opacity: 8, speed: 3 },\n        repulse: { distance: 200, duration: 0.4 },\n        push: { particles_nb: 4 },\n        remove: { particles_nb: 2 }\n      }\n    },\n    retina_detect: true\n  };\n\n  return (\n    <div>\n      <Particles params={particlesParam} className=\"particle-bg\" />\n      <div className=\"main\">\n        <div className=\"name\">Dawei Feng</div>\n        <div className=\"status\">EECS @ UC Berkeley</div>\n        <div className=\"selectors\">\n          <Selector />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" exact component={Home} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}